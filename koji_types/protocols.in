# This library is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this library; if not, see <http://www.gnu.org/licenses/>.


"""
Koji Types - Client Session Protocol method declarations

:author: Christopher O'Brien <obriencj@gmail.com>
:license: GPL v3
"""


from . import (
    ArchiveFileInfo, ArchiveID, ArchiveInfo, ATypeID, ATypeInfo,
    BuildSpecifier, BuildID, BuildLogs, BuildInfo, BuildNVR,
    BuildrootID, BuildrootInfo, BuildrootState,
    BuildState, BTypeInfo, ChangelogEntry, ChannelID, ChannelInfo,
    ChecksumType,
    CGID, CGInfo, CGInitInfo,
    Data, ExternalRepoID, ExternalRepoInfo,
    EventID, EventInfo, FaultInfo, FilterOptions,
    HostID, HostInfo, ListTasksOptions, MavenInfo,
    NamedID, NotificationID, OldNew, PackageID, PackageInfo,
    PermID, PermInfo, POMInfo, QueryOptions,
    RepoID, RepoInfo, RepoOptions, RepoState,
    RPMDepType, RPMDepInfo,
    RPMFileInfo, RPMID, RPMInfo, RPMNVRA,
    RPMSignature, RPMSigTag, SearchResult, SessionInfo, TagBuildInfo,
    TagGroupID, TagGroupInfo, TagID, TagInfo, TagInheritance,
    TagExternalRepos, TagPackageInfo, TagPackageSimple,
    TargetID, TargetInfo,
    TaskID, TaskInfo, UserGroup, UserID, UserInfo, UserStatus, UserType,
    WinInfo, )
from .arch import Arch

from datetime import datetime
from koji import VirtualCall
from typing import (
    Any, Dict, List, Literal, NoReturn, Optional, Tuple,
    Union, overload, )


class ClientSession:
    ...


class Host:
    ...


class MultiCallHost:
    ...


class MultiCallSession:

    @property
    def host(self) -> MultiCallHost:
        ...


# The end.
